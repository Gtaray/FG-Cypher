<?xml version="1.0" encoding="iso-8859-1"?>

<!--
	Please see the license.html file included with this distribution for
	attribution and copyright information.
-->

<root>
	<windowclass name="prompt_pc_intrusion">
		<frame>referencelist</frame>
		<sizelimits>
			<minimum width="400" height="500" />
			<dynamic />
		</sizelimits>
		<nodelete />
		<script file="utility/scripts/pci_prompt.lua" />
		<sheetdata>
			<windowtitlebar_referencelist name="title">
				<resource>pci_prompt_window_title</resource>
			</windowtitlebar_referencelist>
			<windowmenubar_referencelist name="menubar" />

			<frame_char name="frame">
				<anchored>
					<top offset="40"/>
					<left offset="15" />
					<right offset="-15" />
					<bottom offset="-15" />
				</anchored>
			</frame_char>

			<stringcontrol name="description">
				<anchored to="frame">
					<right anchor="right" offset="-15" />
					<left anchor="left" offset="15"/>
					<top anchor="top" offset="15" />
				</anchored>
				<multilinespacing>20</multilinespacing>
				<font>sheetlabel</font>
				<center/>
				<readonly />
			</stringcontrol>

			<label_pci_type name="reroll_label">
				<static textres="pci_label_reroll" />
				<target>reroll</target>
			</label_pci_type>
			<checkbox_pci_type name="reroll_checkbox">
				<target>reroll</target>
				<cost>1</cost>
				<anchored to="reroll_label" />
			</checkbox_pci_type>
			<label_pci_summary name="reroll_summary">
				<static textres="pci_summary_reroll" />
			</label_pci_summary>

			<label_pci_type name="shortterm_label">
				<target>shortterm</target>
				<static textres="pci_label_shortterm" />
			</label_pci_type>
			<checkbox_pci_type name="shortterm_checkbox">
				<target>shortterm</target>
				<cost>1</cost>
				<anchored to="shortterm_label" />
			</checkbox_pci_type>
			<label_pci_summary name="shortterm_summary">
				<static textres="pci_summary_shortterm" />
			</label_pci_summary>

			<label_pci_type name="mediumterm_label">
				<target>mediumterm</target>
				<static textres="pci_label_mediumterm" />
			</label_pci_type>
			<checkbox_pci_type name="mediumterm_checkbox">
				<target>mediumterm</target>
				<cost>2</cost>
				<anchored to="mediumterm_label" />
			</checkbox_pci_type>
			<label_pci_summary name="mediumterm_summary">
				<static textres="pci_summary_mediumterm" />
			</label_pci_summary>

			<label_pci_type name="longterm_label">
				<target>longterm</target>
				<static textres="pci_label_longterm" />
			</label_pci_type>
			<checkbox_pci_type name="longterm_checkbox">
				<target>longterm</target>
				<cost>3</cost>
				<anchored to="longterm_label" />
			</checkbox_pci_type>
			<label_pci_summary name="longterm_summary">
				<static textres="pci_summary_longterm" />
			</label_pci_summary>

			<button_text name="accept">
				<script>
					function onButtonPress()
						window.invokeIntrusion();
					end
				</script>
				<anchored height="22" width="160">
					<bottom parent="frame" anchor="bottom" offset="-20" />
					<right parent="frame" anchor="right" offset="-20" />
				</anchored>
				<textres>gmi_prompt_button_accept</textres>
				<invisible />
			</button_text>

			<button_text name="refuse">
				<script>
					function onButtonPress()
						window.cancelIntrusion();
					end
				</script>
				<anchored height="22">
					<bottom parent="frame" anchor="bottom" offset="-20" />
					<left parent="frame" anchor="left" offset="20" />
					<right parent="accept" anchor="left" offset="-10" />
				</anchored>
				<textres>pmi_prompt_button_cancel</textres>
			</button_text>
		</sheetdata>
	</windowclass>

	<template name="label_pci_type">
		<stringcontrol>
			<script>
				function onInit()
					if not OptionsManagerCypher.areHeroPointsEnabled() then
						return
					end
					if not StringManager.contains(IntrusionManager.hero_point_intrusions, target[1]) then
						return
					end

					local control = getCheckboxControl()
					if tonumber(control.cost[1]) ~= 1 then
						setValue(string.gsub(getValue(), "XP", "Hero Points"))
					else
						setValue(string.gsub(getValue(), "XP", "Hero Point"))	
					end
				end
				function getCheckboxControl()
					local sControlName = target[1] .. "_checkbox"
					return window[sControlName]
				end
				function onClickDown(button, x, y)
					return true;
				end
				function onClickRelease(button, x, y)
					local control = getCheckboxControl()
					control.toggle()
					control.onButtonPress()
					return true;
				end
			</script>
			<anchored to="description">
				<left offset="25" />
				<top anchor="bottom" relation="relative" offset="8" />
				<right offset="0" />
			</anchored>
			<multilinespacing>20</multilinespacing>
			<font>sheetlabel</font>
		</stringcontrol>
	</template>
	<template name="checkbox_pci_type">
		<button_checkbox>
			<script>
				function toggle()
					nCur = getValue()
					if nCur == 1 then
						setValue(0)
					else
						setValue(1)
					end

					onButtonPress()
				end
				function onButtonPress()
					window.onOptionSelected(target[1], tonumber(cost[1]), getValue() == 1);
				end
			</script>
			<anchored height="20" width="20">
				<top />
				<right anchor="left" offset="-5" />
			</anchored>
		</button_checkbox>
	</template>
	<template name="label_pci_summary">
		<stringcontrol>
			<anchored to="description">
				<top anchor="bottom" relation="relative" offset="8" />
				<left offset="20" />
				<right offset="-20" />
			</anchored>
			<multilinespacing>20</multilinespacing>
			<font>sheettext</font>
			<readonly />
			<frame name="referenceblock-blue" offset="12,12,12,12" />
			<invisible />
		</stringcontrol>
	</template>
</root>